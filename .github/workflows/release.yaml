name: Release Charts

on:
  push:
    branches:
      - master
    paths:
      - charts/*/Chart.yaml

jobs:
  prep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed charts
        id: changed_charts
        uses: tj-actions/changed-files@v11.6
        with:
          files: charts/[^/]+/Chart\.yaml$

      - name: Get chart versions
        id: changed_chart_versions
        shell: bash
        run: |
          set -euo pipefail

          version_matrix='['

          for chart_file in ${{ steps.changed_charts.outputs.all_modified_files }}
          do
            chart_name=$(grep -Po "(?<=^name: ).+" "${chart_file}")
            chart_version=$(grep -Po "(?<=^version: ).+" "${chart_file}")
            chart_tag="${chart_name}-${chart_version}"

            version_matrix="$(printf '%s{"chart":"%s","version":"%s","tag":"%s"},' "${version_matrix}" "${chart_name}" "${chart_version}" "${chart_tag}")"
          done

          version_matrix="${version_matrix%,*}]"
          echo "${version_matrix}"
          echo "::set-output name=version_matrix::${version_matrix}"

    outputs:
      version_matrix: ${{ steps.changed_chart_versions.outputs.version_matrix }}

  changelog:
    needs: prep
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.prep.outputs.version_matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get changelog entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          path: charts/${{matrix.chart}}/CHANGELOG.md
          version: "v${{matrix.version}}"

      - name: Create release notes
        shell: bash
        run: |
          set -euo pipefail
          printf '${{ steps.changelog_reader.outputs.changes }}' > ./_release-notes.md

  release:
    needs: changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 3.*

      - name: Set up Helm repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami/

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.3.0
        with:
          config: ct.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          RELEASE_NOTES_FILE: ./_release-notes.md
