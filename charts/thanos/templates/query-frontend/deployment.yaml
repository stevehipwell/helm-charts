{{- if .Values.queryFrontend.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thanos.queryFrontend.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "thanos.queryFrontend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.queryFrontend.autoscaling.enabled }}
  replicas: {{ .Values.queryFrontend.replicas }}
  {{- end }}
  {{- with .Values.queryFrontend.updateStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "thanos.queryFrontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "thanos.queryFrontend.selectorLabels" . | nindent 8 }}
      {{- with .Values.queryFrontend.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.queryFrontend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "thanos.queryFrontend.serviceAccountName" . }}
      {{- with .Values.queryFrontend.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.queryFrontend.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with .Values.queryFrontend.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      containers:
        - name: thanos-query-frontend
          {{- with .Values.queryFrontend.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "thanos.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HOST_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          {{- with .Values.queryFrontend.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - query-frontend
            - --log.level={{ .Values.logLevel }}
            - --log.format={{ .Values.logFormat }}
            - --http-address=0.0.0.0:10902
            - {{ printf "--query-frontend.downstream-url=http://%s.%s.svc.cluster.local:10902" (include "thanos.query.fullname" .) .Release.Namespace }}
          {{- with .Values.queryFrontend.extraArgs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              protocol: TCP
              containerPort: 10902
          livenessProbe:
            {{- toYaml .Values.queryFrontend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.queryFrontend.readinessProbe | nindent 12 }}
          {{- with .Values.queryFrontend.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.queryFrontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.queryFrontend.affinity }}
      affinity:
      {{- with .Values.queryFrontend.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- if .Values.queryFrontend.affinity.podAffinity }}
        podAffinity:
        {{- if .Values.queryFrontend.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- range $term := .Values.queryFrontend.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution }}
            {{- toYaml (list $term) | nindent 12 }}
            {{- if not (hasKey $term "labelSelector") }}
              labelSelector:
                matchLabels:
                  {{- include "thanos.queryFrontend.selectorLabels" $ | nindent 18 }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .Values.queryFrontend.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- range $weightedTerm := .Values.queryFrontend.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution }}
            - weight: {{ $weightedTerm.weight }}
              podAffinityTerm:
                {{- toYaml $weightedTerm.podAffinityTerm | nindent 16 }}
                {{- if not (hasKey $weightedTerm.podAffinityTerm "labelSelector") }}
                labelSelector:
                  matchLabels:
                    {{- include "thanos.queryFrontend.selectorLabels" $ | nindent 20 }}
                {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.queryFrontend.affinity.podAntiAffinity }}
        podAntiAffinity:
        {{- if .Values.queryFrontend.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- range $term := .Values.queryFrontend.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution }}
            {{- toYaml (list $term) | nindent 12 }}
            {{- if not (hasKey $term "labelSelector") }}
              labelSelector:
                matchLabels:
                  {{- include "thanos.queryFrontend.selectorLabels" $ | nindent 18 }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .Values.queryFrontend.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- range $weightedTerm := .Values.queryFrontend.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution }}
            - weight: {{ $weightedTerm.weight }}
              podAffinityTerm:
                {{- toYaml $weightedTerm.podAffinityTerm | nindent 16 }}
                {{- if not (hasKey $weightedTerm.podAffinityTerm "labelSelector") }}
                labelSelector:
                  matchLabels:
                    {{- include "thanos.queryFrontend.selectorLabels" $ | nindent 20 }}
                {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.queryFrontend.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- range $constraint := .Values.queryFrontend.topologySpreadConstraints }}
        {{- toYaml (list $constraint) | nindent 8 }}
        {{- if not (hasKey $constraint "labelSelector") }}
          labelSelector:
            matchLabels:
              {{- include "thanos.queryFrontend.selectorLabels" $ | nindent 14 }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- with .Values.queryFrontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
