apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "thanos.storeGateway.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "thanos.storeGateway.labels" . | nindent 4 }}
spec:
  serviceName: {{ printf "%s-headless" (include "thanos.storeGateway.fullname" .) }}
  replicas: {{ .Values.storeGateway.replicas }}
  {{- with .Values.storeGateway.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "thanos.storeGateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "thanos.storeGateway.selectorLabels" . | nindent 8 }}
      {{- with .Values.storeGateway.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.objstoreConfig.create (gt (len .Values.storeGateway.podAnnotations) 0) }}
      annotations:
      {{- if .Values.objstoreConfig.create }}
        checksum/config: {{ .Values.objstoreConfig.value | sha256sum }}
      {{- end }}
      {{- with .Values.storeGateway.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "thanos.storeGateway.serviceAccountName" . }}
      {{- with .Values.storeGateway.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.storeGateway.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with .Values.storeGateway.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      containers:
        - name: thanos-store-gateway
          {{- with .Values.storeGateway.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "thanos.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: HOST_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          {{- with .Values.storeGateway.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - store
            - --log.level={{ .Values.logLevel }}
            - --log.format={{ .Values.logFormat }}
            - --grpc-address=0.0.0.0:10901
            - --http-address=0.0.0.0:10902
            - --data-dir=/var/thanos/store
            - --objstore.config-file=/etc/thanos/objstore.yaml
          {{- with .Values.storeGateway.extraArgs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: grpc
              protocol: TCP
              containerPort: 10901
            - name: http
              protocol: TCP
              containerPort: 10902
          livenessProbe:
            {{- toYaml .Values.storeGateway.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.storeGateway.readinessProbe | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/thanos/objstore.yaml
              name: objstore-config
              subPath: {{ .Values.objstoreConfig.key }}
              readOnly: true
            - mountPath: /var/thanos/store
              name: data
              readOnly: false
          {{- with .Values.storeGateway.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: objstore-config
          secret:
            secretName: {{ include "thanos.objstoreConfigSecretName" . }}
      {{- if not .Values.storeGateway.persistence.enabled }}
        - name: data
          emptyDir: {}
      {{- end }}
      {{- with .Values.storeGateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.storeGateway.affinity }}
      affinity:
      {{- with .Values.storeGateway.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- if .Values.storeGateway.affinity.podAffinity }}
        podAffinity:
        {{- if .Values.storeGateway.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- range $term := .Values.storeGateway.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution }}
            {{- toYaml (list $term) | nindent 12 }}
            {{- if not (hasKey $term "labelSelector") }}
              labelSelector:
                matchLabels:
                  {{- include "thanos.storeGateway.selectorLabels" $ | nindent 18 }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .Values.storeGateway.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- range $weightedTerm := .Values.storeGateway.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution }}
            - weight: {{ $weightedTerm.weight }}
              podAffinityTerm:
                {{- toYaml $weightedTerm.podAffinityTerm | nindent 16 }}
                {{- if not (hasKey $weightedTerm.podAffinityTerm "labelSelector") }}
                labelSelector:
                  matchLabels:
                    {{- include "thanos.storeGateway.selectorLabels" $ | nindent 20 }}
                {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.storeGateway.affinity.podAntiAffinity }}
        podAntiAffinity:
        {{- if .Values.storeGateway.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- range $term := .Values.storeGateway.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution }}
            {{- toYaml (list $term) | nindent 12 }}
            {{- if not (hasKey $term "labelSelector") }}
              labelSelector:
                matchLabels:
                  {{- include "thanos.storeGateway.selectorLabels" $ | nindent 18 }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .Values.storeGateway.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- range $weightedTerm := .Values.storeGateway.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution }}
            - weight: {{ $weightedTerm.weight }}
              podAffinityTerm:
                {{- toYaml $weightedTerm.podAffinityTerm | nindent 16 }}
                {{- if not (hasKey $weightedTerm.podAffinityTerm "labelSelector") }}
                labelSelector:
                  matchLabels:
                    {{- include "thanos.storeGateway.selectorLabels" $ | nindent 20 }}
                {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.storeGateway.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- range $constraint := .Values.storeGateway.topologySpreadConstraints }}
        {{- toYaml (list $constraint) | nindent 8 }}
        {{- if not (hasKey $constraint "labelSelector") }}
          labelSelector:
            matchLabels:
              {{- include "thanos.storeGateway.selectorLabels" $ | nindent 14 }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- with .Values.storeGateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.storeGateway.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "thanos.storeGateway.selectorLabels" . | nindent 10 }}
        {{- with .Values.storeGateway.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
      {{- with .Values.storeGateway.persistence.storageClass }}
      {{- if (eq "-" .) }}
        storageClassName: ""
      {{- else }}
        storageClassName: {{ . }}
      {{- end }}
      {{- end }}
        accessModes:
          - {{ .Values.storeGateway.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.storeGateway.persistence.size }}
  {{- end }}
