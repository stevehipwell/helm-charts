serviceMonitor:
  enabled: true

additionalEndpoints:
  - dnssrv+_grpc._tcp.kube-prometheus-stack-thanos-discovery.monitoring.svc.cluster.local

additionalReplicaLabels:
  - prometheus_replica

compact:
  enabled: true

  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 1024Mi

  persistence:
    enabled: true

  extraVolumes:
    - name: test
      configMap:
        name: thanos-test

  extraVolumeMounts:
    - name: test
      mountPath: /test

  deduplication:
    enabled: true
    func: penalty

  nodeSelector:
    kubernetes.io/os: linux

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule

  tolerations:
    - key: system
      operator: Exists

query:
  autoscaling:
    enabled: true

  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 1024Mi

  extraVolumes:
    - name: test
      configMap:
        name: thanos-test

  extraVolumeMounts:
    - name: test
      mountPath: /test

  nodeSelector:
    kubernetes.io/os: linux

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule

  tolerations:
    - key: system
      operator: Exists

queryFrontend:
  enabled: true

  autoscaling:
    enabled: true

  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  ingress:
    enabled: true
    ingressClassName: test
    hosts:
      - query.chart-example.local
    tls:
      - hosts:
          - query.chart-example.local
        secretName: chart-example-tls

  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 1024Mi

  extraVolumes:
    - name: test
      configMap:
        name: thanos-test

  extraVolumeMounts:
    - name: test
      mountPath: /test

  nodeSelector:
    kubernetes.io/os: linux

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule

  tolerations:
    - key: system
      operator: Exists

receive:
  enabled: true

  ingestor:
    podDisruptionBudget:
      enabled: true
      minAvailable: 1

    persistence:
      enabled: true

    resources:
      requests:
        cpu: 500m
        memory: 1024Mi
      limits:
        cpu: 1000m
        memory: 1024Mi

    extraVolumes:
      - name: test
        configMap:
          name: thanos-test

    extraVolumeMounts:
      - name: test
        mountPath: /test

    nodeSelector:
      kubernetes.io/os: linux

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule

    tolerations:
      - key: system
        operator: Exists

  router:
    autoscaling:
      enabled: true

    podDisruptionBudget:
      enabled: true
      minAvailable: 1

    ingress:
      enabled: true
      ingressClassName: test
      hosts:
        - router.chart-example.local
      tls:
        - hosts:
            - router.chart-example.local
          secretName: chart-example-tls

    resources:
      requests:
        cpu: 500m
        memory: 1024Mi
      limits:
        cpu: 1000m
        memory: 1024Mi

    extraVolumes:
      - name: test
        configMap:
          name: thanos-test

    extraVolumeMounts:
      - name: test
        mountPath: /test

    nodeSelector:
      kubernetes.io/os: linux

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule

    tolerations:
      - key: system
        operator: Exists

rule:
  enabled: true

  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 1024Mi

  persistence:
    enabled: true

  extraVolumes:
    - name: test
      configMap:
        name: thanos-test

  extraVolumeMounts:
    - name: test
      mountPath: /test

  configReloader:
    enabled: true
    extraVolumeMounts:
      - name: test
        mountPath: /test

  nodeSelector:
    kubernetes.io/os: linux

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule

  tolerations:
    - key: system
      operator: Exists

  instanceLabel: true

storeGateway:
  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 1024Mi

  persistence:
    enabled: true

  extraVolumes:
    - name: test
      configMap:
        name: thanos-test

  extraVolumeMounts:
    - name: test
      mountPath: /test

  nodeSelector:
    kubernetes.io/os: linux

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule

  tolerations:
    - key: system
      operator: Exists
