# Default values for istio-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # -- Image repository for the default container.
  repository: docker.io/istio/operator
  # -- (string) Image tag for the default container, this will default to `.Chart.AppVersion` if not set and will be omitted if set to `-`.
  tag:
  # -- Image pull policy for the default container.
  pullPolicy: IfNotPresent
  # -- Image pull secrets (DEPRECATED).
  pullSecrets: []

# -- Image pull secrets.
imagePullSecrets: []

# -- (string) Override the name of the chart.
nameOverride:

# -- (string) Override the full name of the chart.
fullnameOverride:

# -- Labels to add to all chart resources.
commonLabels: {}

serviceAccount:
  # -- If `true`, create a new `ServiceAccount`.
  create: true
  # -- Labels to add to the service account.
  labels: {}
  # -- Annotations to add to the service account.
  annotations: {}
  # -- (string) If this is set and `serviceAccount.create` is `true` this will be used for the created `ServiceAccount` name, if set and `serviceAccount.create` is `false` then this will define an existing `ServiceAccount` to use.
  name:

rbac:
  # -- If `true`, create a `ClusterRole` & `ClusterRoleBinding` with access to the Kubernetes API.
  create: true

# -- Labels to add to the pod.
podLabels: {}

# -- Annotations to add to the pod.
podAnnotations: {}

# -- Security context for the pod.
# @default -- See _values.yaml_
podSecurityContext:
  runAsNonRoot: true
  fsGroup: 65534
  seccompProfile:
    type: RuntimeDefault

# -- (string) Priority class name for the pod.
priorityClassName:

# -- (int) Termination grace period for the pod in seconds.
terminationGracePeriodSeconds:

# -- Security context for the default container.
# @default -- See _values.yaml_
securityContext:
  privileged: false
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1337
  runAsGroup: 1337
  capabilities:
    drop:
      - ALL

# -- Resources for the default container.
resources: {}

# -- Node labels to match for pod scheduling.
nodeSelector: {}

# -- Affinity settings for pod scheduling. If an explicit label selector is not provided for pod affinity or pod anti-affinity one will be created from the pod selector labels.
affinity: {}

# -- Topology spread constraints for pod scheduling. If an explicit label selector is not provided one will be created from the pod selector labels.
topologySpreadConstraints: []

# -- Node taints which will be tolerated for pod scheduling.
tolerations: []

serviceMonitor:
  # -- If `true`, create a `ServiceMonitor` resource to support the _Prometheus Operator_.
  enabled: false
  # -- Additional labels for the `ServiceMonitor`.
  additionalLabels: {}
  # -- Additional endpoint configuration for the default `ServiceMonitor` endpoint.
  endpointConfig: {}
  # -- (int) _Prometheus_ scrape interval (DEPRECATED).
  interval:

dashboards:
  # -- If `true`, install the _Grafana_ dashboards provided by the chart.
  enabled: false

# -- Namespace to install _Istio_ into.
istioNamespace: istio-system

# -- The control plane revision, if required.
revision:

# -- Period to wait for resources before timing out.
waitForResourcesTimeout: 300s

controlPlane:
  # -- If `true`, install the _Istio_ control plane.
  install: false
  # -- Annotations to add to the `IstioOperator` CR.
  annotations: {}
  # -- Spec for the `IstioOperator` CR.
  spec: {}
  #   hub: docker.io/istio
  #   profile: default
  #   meshConfig:
  #   components:
  #   additionalComponents:
  #   values:
