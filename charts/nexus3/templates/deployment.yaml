apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nexus3.fullname" . }}
  labels:
    {{- include "nexus3.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "nexus3.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nexus3.selectorLabels" . | nindent 8 }}
      annotations:
      {{- with .Values.podAnnotations }}
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
        checksum/properties: {{ include (print $.Template.BasePath "/properties.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nexus3.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.caCerts.enabled }}
        - name: ca-certs
          image: adoptopenjdk:8-jdk-hotspot
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
          command: ["sh"]
          args: ["-c", "mkdir -p /nexus-data/keystores; cp -f \"${JAVA_HOME}/jre/lib/security/cacerts\" /nexus-data/keystores/cacerts; for f in /nexus-data/secrets/cas/*; do keytool -importcert -file \"${f}\" -alias \"$(basename \"${f}\")\" -keystore /nexus-data/keystores/cacerts -storepass changeit -trustcacerts -noprompt; done;"]
          volumeMounts:
            - mountPath: /nexus-data
              name: {{ include "nexus3.pvcname" . }}
            - mountPath: /nexus-data/secrets/cas
              name: nexus3-cas
        {{- end }}
        - name: volume-mount
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
          command: ["sh"]
          args: ["-c", "mkdir -p /nexus-data/etc; chown -R 200:200 /nexus-data;"]
          volumeMounts:
            - mountPath: /nexus-data
              name: {{ include "nexus3.pvcname" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: INSTALL4J_ADD_VM_PARAMS
              {{- if .Values.caCerts.enabled }}
              value: {{ printf "-Xms%s -Xmx%s %s -Djava.util.prefs.userRoot=/nexus-data/javaprefs -Djavax.net.ssl.trustStore=/nexus-data/keystores/cacerts %s" .Values.envVars.jvmMinHeapSize .Values.envVars.jvmMaxHeapSize .Values.envVars.jvmAdditionalMemoryOptions .Values.envVars.jvmAdditionalOptions | quote }}
              {{- else }}
              value: {{ printf "-Xms%s -Xmx%s %s -Djava.util.prefs.userRoot=/nexus-data/javaprefs %s" .Values.envVars.jvmMinHeapSize .Values.envVars.jvmMaxHeapSize .Values.envVars.jvmAdditionalMemoryOptions .Values.envVars.jvmAdditionalOptions | quote }}
              {{- end }}
            {{- with .Values.env }}
            {{- . | toYaml | trim | nindent 12 }}
            {{- end }}
          command:
            - "sh"
            - "-c"
          args:
            - echo "Starting Nexus...";
              {{- if .Values.config.enabled }}
              bash /opt/sonatype/nexus/conf/configure.sh;
              {{- end }}
              /opt/sonatype/start-nexus-repository-manager.sh;
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          {{- range .Values.service.additionalPorts }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: TCP
          {{- end }}
          readinessProbe:
            httpGet:
              path: /service/rest/v1/status
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 10
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /service/rest/v1/status
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 10
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /nexus-data
              name: {{ include "nexus3.pvcname" . }}
            - mountPath: /nexus-data/etc/nexus.properties
              name: {{ template "nexus3.fullname" . }}-properties
              subPath: nexus.properties
              readOnly: true
          {{- if .Values.config.enabled }}
            - mountPath: /opt/sonatype/nexus/conf
              name: {{ template "nexus3.fullname" . }}-conf
              readOnly: true
          {{- if .Values.config.rootPassword }}
            - mountPath: /opt/sonatype/nexus/secret/root.password
              name: {{ .Values.config.rootPassword.secret }}
              subPath: {{ .Values.config.rootPassword.key }}
              readOnly: true
          {{- end }}
          {{- if .Values.config.ldap.enabled }}
            - mountPath: /opt/sonatype/nexus/secret/ldap.password
              name: {{ .Values.config.ldap.authPassword.secret }}
              subPath: {{ .Values.config.ldap.authPassword.key }}
              readOnly: true
          {{- end }}
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
            {{ toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- .Values.resources | toYaml | trim | nindent 12 }}
      volumes:
        - name: {{ include "nexus3.pvcname" . }}
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "nexus3.pvcname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- if .Values.caCerts.enabled }}
        - name: nexus3-cas
          secret:
            secretName: {{ .Values.caCerts.secret }}
      {{- end }}
        - name: {{ template "nexus3.fullname" . }}-properties
          configMap:
            name: {{ template "nexus3.fullname" . }}-properties
            defaultMode: 0755
      {{- if .Values.config.enabled }}
        - name: {{ template "nexus3.fullname" . }}-conf
          configMap:
            name: {{ template "nexus3.fullname" . }}-conf
            defaultMode: 0755
      {{- if .Values.config.rootPassword }}
        - name: {{ .Values.config.rootPassword.secret }}
          secret:
            secretName: {{ .Values.config.rootPassword.secret }}
      {{- end }}
      {{- if and .Values.config.ldap.enabled }}
        - name: {{ .Values.config.ldap.authPassword.secret }}
          secret:
            secretName: {{ .Values.config.ldap.authPassword.secret }}
      {{- end }}
      {{- end }}
      {{- with .Values.extraVolumes }}
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
