{{- if not .Values.deployment -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "jira-software.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "jira-software.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "jira-software.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "jira-software.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jira-software.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jira-software.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
    {{- if or .Values.caCerts.enabled .Values.extraInitContainers }}
      initContainers:
    {{- if .Values.caCerts.enabled }}
        - name: ca-certs
          image: adoptopenjdk:11-jdk-hotspot
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["sh"]
          args: ["-c", "cp -f \"${JAVA_HOME}/lib/security/cacerts\" /var/atlassian/application-data/jira/cacerts; for f in /var/atlassian/application-data/jira/secrets/cas/*; do keytool -importcert -file \"${f}\" -alias \"$(basename \"${f}\")\" -keystore /var/atlassian/application-data/jira/cacerts -storepass changeit -trustcacerts -noprompt; done;"]
          volumeMounts:
            - mountPath: /var/atlassian/application-data/jira
              name: {{ include "jira-software.pvcname" . }}
            - mountPath: /var/atlassian/application-data/jira/secrets/cas
              name: jira-cas
      {{- end }}
      {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
      containers:
        - name: jira
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "jira-software.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: JVM_MINIMUM_MEMORY
              value: {{ .Values.envVars.jvmMinHeapSize | quote }}
            - name: JVM_MAXIMUM_MEMORY
              value: {{ .Values.envVars.jvmMaxHeapSize | quote }}
            - name: JVM_RESERVED_CODE_CACHE_SIZE
              value: {{ .Values.envVars.jvmReservedCodeCacheSize | quote }}
            - name: JVM_SUPPORT_RECOMMENDED_ARGS
            {{- if .Values.caCerts.enabled }}
              value: {{ printf "-Djavax.net.ssl.trustStore=/var/atlassian/application-data/jira/cacerts %s %s" .Values.envVars.jvmAdditionalMemoryOptions .Values.envVars.jvmAdditionalOptions | trim | quote }}
            {{- else }}
              value: {{ printf "%s %s" .Values.envVars.jvmAdditionalMemoryOptions .Values.envVars.jvmAdditionalOptions | trim | quote }}
            {{- end }}
            {{- if .Values.ingress.enabled }}
            - name: ATL_PROXY_NAME
              value: {{ index .Values.ingress.hosts 0 | quote }}
            - name: ATL_PROXY_PORT
              value: {{ if .Values.ingress.tls }}"443"{{ else }}"80"{{ end }}
            - name: ATL_TOMCAT_SCHEME
              value: {{ if .Values.ingress.tls }}"https"{{ else }}"http"{{ end }}
            - name: ATL_TOMCAT_SECURE
              value: {{ if .Values.ingress.tls }}"true"{{ else }}"false"{{ end }}
            {{- end }}
            {{- if .Values.postgresql.enabled }}
            - name: ATL_JDBC_URL
              value: {{ printf "jdbc:postgresql://%s:%s/%s" (include "jira-software.postgresql.serviceName" .) (include "jira-software.postgresql.servicePort" .) (include "jira-software.postgresql.database" .) | quote }}
            - name: ATL_JDBC_USER
              value: {{ include "jira-software.postgresql.username" . | quote }}
            - name: ATL_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "jira-software.postgresql.passwordSecretName" . }}
                  key: {{ if eq (include "jira-software.postgresql.username" .) "postgres" }}postgresql-password{{ else }}password{{ end }}
            - name: ATL_DB_DRIVER
              value: "org.postgresql.Driver"
            - name: ATL_DB_TYPE
              value: "postgres72"
            {{- else if .Values.psql }}
            - name: ATL_JDBC_URL
              value: {{ printf "jdbc:postgresql://%s:%v/%s" .Values.psql.host (default "5432" .Values.psql.port) .Values.psql.database | quote }}
            - name: ATL_JDBC_USER
              value: {{ .Values.psql.username | quote }}
            - name: ATL_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.psql.password.secret }}
                  key: {{ .Values.psql.password.key }}
            - name: ATL_DB_DRIVER
              value: "org.postgresql.Driver"
            - name: ATL_DB_TYPE
              value: "postgres72"
            {{- end }}
            - name: ATL_FORCE_CFG_UPDATE
              value: {{ .Values.envVars.forceCfgUpdate | quote }}
            - name: SET_PERMISSIONS
              value: {{ .Values.envVars.setPermissions | quote }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          volumeMounts:
            - mountPath: /var/atlassian/application-data/jira
              name: {{ include "jira-software.pvcname" . }}
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- if not .Values.persistence.enabled }}
        - name: {{ include "jira-software.pvcname" . }}
          emptyDir: {}
      {{- end }}
      {{- if .Values.caCerts.enabled }}
        - name: jira-cas
          secret:
            secretName: {{ .Values.caCerts.secret }}
      {{- end }}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      {{- $_ := include "jira-software.patchAffinity" $ }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      {{- $_ := include "jira-software.patchTopologySpreadConstraints" $ }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "jira-software.pvcname" . }}
        labels:
          {{- include "jira-software.selectorLabels" . | nindent 10 }}
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        {{- with .Values.persistence.storageClass }}
        {{- if (eq "-" .) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ . | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
{{- end }}
