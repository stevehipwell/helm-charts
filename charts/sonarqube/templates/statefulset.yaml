{{- if not .Values.deployment -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sonarqube.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "sonarqube.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "sonarqube.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "sonarqube.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sonarqube.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with default .Values.image.pullSecrets .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sonarqube.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
  {{- if or .Values.caCerts.enabled (or .Values.installPlugins.enabled (or .Values.sonarSecretProperties.enabled .Values.extraInitContainers)) }}
      initContainers:
      {{- if .Values.caCerts.enabled }}
        - name: ca-certs
          image: adoptopenjdk:11-jdk-hotspot
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["/opt/scripts/update-ca-certs.sh"]
          volumeMounts:
            - mountPath: /opt/scripts/update-ca-certs.sh
              name: commands
              subPath: update-ca-certs.sh
            - mountPath: /opt/sonarqube/certs
              name: {{ include "sonarqube.pvcname" . }}
              subPath: certs
            - mountPath: /opt/secrets/ca-certs
              name: ca-certs
      {{- end }}
      {{- if .Values.installPlugins.enabled }}
        - name: download-plugins
          image: alpine:3
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["/opt/scripts/download-plugins.sh"]
          volumeMounts:
            - mountPath: /opt/scripts/download-plugins.sh
              name: commands
              subPath: download-plugins.sh
            - mountPath: /opt/sonarqube/extensions
              name: {{ include "sonarqube.pvcname" . }}
              subPath: extensions
      {{- end }}
      {{- if .Values.sonarSecretProperties.enabled }}
        - name: concat-properties
          image: alpine:3
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["/opt/scripts/concat-properties.sh"]
          volumeMounts:
            - mountPath: /opt/scripts/concat-properties.sh
              name: commands
              subPath: concat-properties.sh
            - mountPath: /opt/props/sonar.properties
              name: config
              subPath: sonar.properties
            - mountPath: /opt/props/sonar-secret.properties
              name: config-secret
              subPath: {{ .Values.sonarSecretProperties.key }}
            - mountPath: /opt/result
              name: config-concat
      {{- end }}
      {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
      containers:
        - name: sonarqube
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "sonarqube.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SONAR_WEB_JAVAOPTS
              {{- if .Values.caCerts.enabled }}
              value: {{ printf "-Djavax.net.ssl.trustStore=/opt/sonarqube/certs/cacerts %s" .Values.envVars.javaOptionsWeb | trim | quote }}
              {{- else }}
              value: {{ .Values.envVars.javaOptionsWeb | trim | quote }}
              {{- end }}
            - name: SONAR_WEB_JAVAADDITIONALOPTS
              value: {{ .Values.envVars.javaAdditionalOptionsWeb | trim | quote }}
            - name: SONAR_CE_JAVAOPTS
              value: {{ .Values.envVars.javaOptionsCE | trim | quote }}
            - name: SONAR_CE_JAVAADDITIONALOPTS
              value: {{ .Values.envVars.javaAdditionalOptionsCE | trim | quote }}
            {{- if .Values.postgresql.enabled }}
            - name: SONAR_JDBC_URL
              value: {{ printf "jdbc:postgresql://%s:%s/%s" (include "sonarqube.postgresql.serviceName" .) (include "sonarqube.postgresql.servicePort" .) (include "sonarqube.postgresql.database" .) | quote }}
            - name: SONAR_JDBC_USERNAME
              value: {{ include "sonarqube.postgresql.username" . | quote }}
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarqube.postgresql.passwordSecretName" . }}
                  key: {{ if eq (include "sonarqube.postgresql.username" .) "postgres" }}postgresql-password{{ else }}password{{ end }}
            {{- else if .Values.psql }}
            - name: SONAR_JDBC_URL
              value: {{ printf "jdbc:postgresql://%s:%v/%s" .Values.psql.host (default "5432" .Values.psql.port) .Values.psql.database | quote }}
            - name: SONAR_JDBC_USERNAME
              value: {{ .Values.psql.username | quote }}
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.psql.password.secret }}
                  key: {{ .Values.psql.password.key }}
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.installPlugins.enabled }}
          command: ["/opt/scripts/install-plugins.sh"]
          {{- end }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          volumeMounts:
          {{- if .Values.installPlugins.enabled }}
            - mountPath: /opt/scripts/install-plugins.sh
              name: commands
              subPath: install-plugins.sh
          {{- end }}
            - mountPath: /opt/sonarqube/conf
          {{- if .Values.sonarSecretProperties.enabled }}
              name: config-concat
          {{- else }}
              name: config
          {{- end }}
            - mountPath: /opt/sonarqube/data
              name: {{ include "sonarqube.pvcname" . }}
              subPath: data
            - mountPath: /opt/sonarqube/extensions
              name: {{ include "sonarqube.pvcname" . }}
              subPath: extensions
            - mountPath: /opt/sonarqube/certs
              name: {{ include "sonarqube.pvcname" . }}
              subPath: certs
            - mountPath: /opt/sonarqube/logs
              name: {{ include "sonarqube.pvcname" . }}
              subPath: logs
            - mountPath: /opt/sonarqube/temp
              name: {{ include "sonarqube.pvcname" . }}
              subPath: temp
            - mountPath: /tmp
              name: tmp-dir
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if not .Values.persistence.enabled }}
        - name: {{ include "sonarqube.pvcname" . }}
          emptyDir: {}
      {{- end }}
        - name: commands
          configMap:
            name: {{ include "sonarqube.commandsName" . }}
            defaultMode: 0755
        {{- if .Values.caCerts.enabled }}
        - name: ca-certs
          secret:
            secretName: {{ .Values.caCerts.secret }}
        {{- end }}
        - name: config
          configMap:
            name: {{ include "sonarqube.configName" . }}
        {{- if .Values.sonarSecretProperties.enabled }}
        - name: config-secret
          secret:
            secretName: {{ .Values.sonarSecretProperties.secret }}
        - name : config-concat
          emptyDir: {}
        {{- end }}
        - name : tmp-dir
          emptyDir: {}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      {{- $_ := include "sonarqube.patchAffinity" $ }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      {{- $_ := include "sonarqube.patchTopologySpreadConstraints" $ }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "sonarqube.pvcname" . }}
        labels:
          {{- include "sonarqube.labels" . | nindent 10 }}
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        {{- with .Values.persistence.storageClass }}
        {{- if (eq "-" .) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ . | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
{{- end }}
