{{- if .Values.ingress.enabled -}}
{{- $apiIsStable := eq (include "plantuml.ingress.isStable" .) "true" -}}
{{- $ingressSupportsPathType := eq (include "plantuml.ingress.supportsPathType" .) "true" -}}
{{- $serviceName := include "plantuml.fullname" . -}}
apiVersion: {{ include "plantuml.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ $serviceName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "plantuml.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if and $apiIsStable .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName }}
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ quote . }}
      http:
        paths:
          - path: {{ $.Values.ingress.path }}
            {{- if $ingressSupportsPathType }}
            pathType: Prefix
            {{- end }}
            backend:
            {{- if $apiIsStable }}
              service:
                name: {{ $serviceName }}
                port:
                  name: http
            {{- else }}
              serviceName: {{ $serviceName }}
              servicePort: http
            {{- end }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
    {{- range .hosts }}
        - {{ quote . }}
    {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
  {{- end }}
{{- end }}
