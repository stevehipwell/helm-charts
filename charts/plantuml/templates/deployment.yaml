apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "plantuml.fullname" . }}
  labels:
    {{- include "plantuml.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "plantuml.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "plantuml.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "plantuml.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.caCerts.enabled }}
      initContainers:
        - name: ca-certs
          image: adoptopenjdk:11-jdk-hotspot
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          command: ["sh"]
          args: ["-c", "cp -f /opt/java/openjdk/lib/security/cacerts /var/cacerts/keystore/cacerts; for f in /var/cacerts/cas/*; do keytool -importcert -file \"${f}\" -alias \"$(basename \"${f}\")\" -keystore /var/cacerts/keystore/cacerts -storepass changeit -trustcacerts -noprompt; done;"]
          volumeMounts:
            - mountPath: /var/cacerts/cas
              name: ca-certs-secret
            - mountPath: /var/cacerts/keystore
              name: ca-certs-keystore
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default (printf "jetty-v%s" .Chart.AppVersion) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /png
              port: http
          readinessProbe:
            httpGet:
              path: /png
              port: http
          {{- if .Values.caCerts.enabled }}
          volumeMounts:
            - mountPath: /usr/local/openjdk-11/lib/security/cacerts
              name: ca-certs-keystore
              subPath: cacerts
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.caCerts.enabled }}
      volumes:
        - name: ca-certs-secret
          secret:
            secretName: {{ .Values.caCerts.secret }}
        - name: ca-certs-keystore
          emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
