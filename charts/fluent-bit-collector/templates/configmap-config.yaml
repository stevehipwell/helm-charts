apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fluent-bit-collector.configConfigMapName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fluent-bit-collector.labels" . | nindent 4 }}
data:
{{- $env := merge (dict "STORAGE_PATH" (ternary "/fluent-bit/data" "" .Values.storage.enabled) "STORAGE_TYPE_PREFER_FS" (ternary "filesystem" "memory" .Values.storage.enabled) "KUBELET_ENDPOINT" (toString .Values.kubeletEndpoint.enabled) "NOT_KUBELET_ENDPOINT" (toString (not .Values.kubeletEndpoint.enabled))) .Values.config.env }}
{{- range $i, $p := .Values.service.additionalPorts }}
{{- $env = merge $env (dict (printf "ADDITIONAL_PORT_%d" $i) (toString $p.containerPort)) }}
{{- end }}
{{- $service := merge (dict "daemon" false "http_server" true "http_Port" .Values.service.httpPort "hot_reload" .Values.hotReload.enabled "storage.path" "${STORAGE_PATH}") .Values.config.service }}
{{- $inputs := list }}
{{- if .Values.storage.enabled }}
{{- $inputs = .Values.config.pipeline.inputs }}
{{- else }}
{{- range $in := .Values.config.pipeline.inputs }}
{{- $inputs = append $inputs (omit $in "db") }}
{{- end }}
{{- end }}
{{- $pipeline := merge (dict "inputs" $inputs) .Values.config.pipeline }}
{{- $config := dict "service" $service "plugins" .Values.config.plugins "parsers" .Values.config.parsers "multiline_parsers" .Values.config.multilineParsers "pipeline" $pipeline "upstream_servers" .Values.config.upstreamServers "includes" .Values.config.includes }}
  fluent-bit.yaml: |-
    env:
{{- range $k, $v := $env }}
      {{ printf "%s: %s" $k ((tpl $v $) | quote) }}
{{- end }}
{{- toYaml $config | nindent 4 }}
{{- range $k, $v := .Values.extraConfig }}
  {{ printf "%s.yaml" $k }}: |-
{{- toYaml $v | nindent 4 }}
{{- end }}
